[Заголовки]
дисциплина = Теория автоматов и формальных языков		
код =
план = RUPlikefiit16.xml
автор = Павлов А.В., к.\,ф.-м.\,н., доцент кафедры информационных технологий ИМИ, av.pavlov@s-vfu.ru
год = 2016
math = 1

[Аннотация]
цели  = дать введение в идеи и методы теории формальных языков;                        
        ознакомить с основными способами задания и анализа регулярных языков;          
        ознакомить с основными способами задания и анализа контекстно-свободных языков.
краткоесодержание = Регулярные языки. Иерархия Хомского. Контекстно-свободные языки. Языки, распознаваемые машиной Тьюринга. Неразрешимые языки.

знать = определение, основные способы задания и свойства регулярных языков;
		определение, основные способы задания и свойства контекстно-свободных языков;
		алгоритмы, используемые для определения принадлежности заданной строки заданному регулярному или КС-языку.
уметь = строить регулярные выражения для несложных регулярных языков;
		понимать и проверять индуктивные доказательства свойств языков, автоматов и грамматик;
		преобразовывать задания данного регулярного языка при помощи конечного автомата, грамматики, регулярного выражения друг в друга;
		пользоваться в компьютерных программах несложными регулярными выражениями для поиска текста;
		строить несложные машины Тьюринга.
владетьнавыками= проверки принадлежности заданной строки языку данного конечного автомата или регулярного выражения; 
        чтения грамматик, заданных в форме Бэкуса-Наура и построения примеров строк, выводимых в данной грамматике.

опирается=Б1.Б.17 -- Дискретная математика, Б1.Б.18~-- Математическая логика и теория алгоритмов		
опорадля= Б1.В.ОД.11 -- Языки программирования и методы трансляции		


[Распределение часов]
список=Тема 1. Регулярные языки||||||||||||
       Тема 2. КС-языки        ||||||1.2*||||||
       Тема 3. Элементы теории алгоритмов	   |||||||||||.6*|	

[Содержание тем]
Тема1=Регулярные языки. Мотивировки: задачи и приложения теории формальных языков. Использование регулярных выражений в задачах компьютерной обработки текстов. POSIX BRE, ERE. Детерминированные и недетерминированные конечные автоматы (КА). Теорема о детерминизации. Регулярные выражения.Регулярные выражения (РВ). Эквивалентность РВ и КА. Праволинейные грамматики. Грамматики. Иерархия Хомского. Праволинейные грамматики. Нормальный вид праволинейных грамматик. Эквивалентность праволинейных грамматик и КА. Свойства регулярных языков. Свойства замкнутости. Лемма о разрастании. Примеры нерегулярных языков. Программные распознаватели РВ.
Тема2=Примеры КС-языков. Форма Бэкуса-Наура. Практическое использование грамматик. Нормальная форма Хомского. Магазинные автоматы (МА). Эквивалентность МА и КС-грамматик. Свойства КС-языков. Алгоритм Кока-Янгера-Касами. Лемма о разрастании для КС-языков. Примеры не-КС языков. Иерархия Хомского.
Тема3=Машина Тьюринга (МТ) как распознаватель. Детерминированная и недетерминированная МТ. Сложность, классы P и NP. Разрешимые и вычислимые множества. Программы, печатающие сами себя. Универсальная машина, диагонализация и алгоритмическая неразрешимость. Неразрешимость задач самоприменимости и остановки. Понятие о сетях Петри и клеточных автоматах (*). 

[Формы и технологии занятий]
текст = При проведении занятий и организации СРС используются традиционные
        технологии сообщающего обучения, предполагающие передачу информации 
        в~готовом виде: проведение лекционных занятий, самостоятельная работа 
        с~источниками. Предусмотрено использование активных и интерактивных форм
        обучения с целью формирования и развития профессиональных навыков
        студентов - выполнение практических работ с применением компьютерных
        технологий.

[СРС]
табл=1|Регулярные языки	              |Решение задач |20|Сдача домашних заданий в Gradiance, JFLAP 
     2|КС-языки						  |Решение задач |19|Сдача домашних заданий в Gradiance, JFLAP
     3|Элементы теории алгоритмов |Решение задач |12|Сдача домашних заданий в Gradiance
      |ИТОГО                          |              |51| 

[Рейтинговый регламент]
табл = Посещаемость                   |6|10
       Домашние задания, онлайн-тесты |30|50
       Контрольные работы             |24|40
       Количество баллов для получения зачета (min--max)|60|100

[Показатели оценивания]
уровень1 = высокий 
критерии1 = \raggedright\arraybackslash способен выполнять все задачи из следующего списка:
			строить конечные автоматы для языков с простыми закономерностями повторов;
			преобразовать заданный недетерминированный КА в детерминированный;
		    написать extended regexp для структурированных фрагментов текста, включающих вложенные повторы, с использованием классов символов, квантификаторов и группировки;
			преобразовывать РВ в эквивалентное КА и обратно;
			приводить КС-грамматику к нормальной форме Хомского;
			преобразовывать КС грамматику в эквивалентный МА;
			строить машину Тьюринга, выполняющую простые манипуляции со строками на ленте, либо 
			арифметические действия (исключая деление) с аргументами.
оценка1 = зачтено
уровень2 = 	базовый
критерии2 = не способен выполнить не более одного пункта из вышеперечисленного
оценка2 = зачтено
уровень3 = 	мини\-мальный
критерии3 = не способен выполнить не более двух пункта из вышеперечисленного
оценка3 = зачтено
уровень4 = 	не освоено
критерии4 = не способен выполнить три или более пунктов из вышеперечисленного
оценка4 = не зачтено


[Методические указания]
текст = Важное значение в освоении 
        дисциплины имеет самостоятельная работа. Она предполагает 
        в том числе выполнение в срок домашних работ в системе 
        онлайн-тестирования Grаdiance. Хотя тесты Gradiance
        выглядят как тесты с выбором варианта, на деле требуется
        решить традиционную задачу, а Gradiance задает вопросы 
        к различным случайно выбранным аспектам решения. Для
        сдачи каждого домашнего задания предусмотрен срок,
        после которого решение получает сначала неполные баллы,
        а затем не получает баллов вообще. Своевременное выполнение 
        заданий требует самостоятельности и ответственности. При
        возникновении трудностей следует задавать вопросы, в том числе
        на форуме курса, где на вопросы могут отвечать сокурсники. 
        \par
		Последовательное и добросовестное изучение курса является основой для
		выработки углубленного понимания алгоритмических проблем генерации и анализа
		структурированных текстов в областях деятельности, предполагаемых образовательным 
		стандартом.


[Типовые задания]
кодыкомпетенций1=ПК-2, ПК-6
показатель1=знать определение, основные способы задания и свойства регулярных языков;
    владеть навыками проверки принадлежности заданной строки языку данного конечного автомата или регулярного выражения; 
тема1=1
задания1=Нарисуйте диаграмму недетерминированного конечного автомата над алфавитом $\{a,b,c\}$ 
    с множеством состояний $\{P, Q, R, S, T\}$, начальным состоянием $P$, 
    множеством финальных состояний $\{T\}$, и~функцией переходов $\delta$:\newline
    {\small
    $\delta(P,ε)=\{Q\}$,  $\delta(Q,ε)=\{R\}$,  $\delta(T,0)=\{T\}$,\newline
    $\delta(R,0)=\{R,S\}$, $\delta(S,0)=\{S,T\}$\newline
    $\delta(P,0)=\{P\}$,  $\delta(Q,2)=\{Q\}$, \newline
    $\delta(T,1)=\{T\}$, $\delta(R,1)=\{R\}$,   $\delta(S,1)=\{S\}$.\newline
	}
    Перечислите все строки длины $3$, допускаемые данным автоматом.
    Допускает ли этот автомат цепочку $002011$? Перечислите все состояния, в которых он может оказаться, прочитав данную цепочку.

кодыкомпетенций2=ПК-2, ПК-6
показатель2=знать определение, основные способы задания и свойства контекстно-свободных языков;
тема2=2
задания2=Постройте КС-грамматику для языка $\{0^m 1^n 2^k 0^{n+2} \mid m,k \geqslant 0,\: n>0\}$.

кодыкомпетенций3=ПК-2, ПК-6
показатель3=знать алгоритмы, используемые для определения принадлежности заданной строки заданному регулярному или КС-языку.
тема3=2
задания3=Заполните таблицу алгоритма Кока-Янгера-Касами для грамматики \newline
	$S \to AB \mid BC;\quad A \to BA \mid a$,\newline
	$B \to CC \mid b;\quad C \to AB \mid a$\newline
	и строки $w = baaba$.

кодыкомпетенций4=ОПК-2, ПК-6
показатель4=уметь строить регулярные выражения для несложных регулярных языков;
тема4=1
задания4=Постройте ERE для последовательностей адресных строк в следующем формате. 
    Адресная строка состоит из названия улицы (одно русское слово, начинающееся с прописной буквы,
	перед которым обязательно идет «{\tt ул.}»), номера дома $n$
	(\mbox{$1 \leqslant n \leqslant 59$}), возможно, с дробью (число от 1 до 3), и номера
	квартиры $m$, ($1 \leqslant m \leqslant 79$), перед которым обязательно идет
	«{\tt кв.}». Улица, номер дома и номер квартиры разделяются запятой с пробелом. Адресные
	строки в последовательности разделяются точкой с запятой и пробелом. Последовательность 
	завершается точкой. Пример:
	«{\tt ул. Гороховая, 53, кв. 23; ул. Кржижановского, 27/2, кв. 2.}»

кодыкомпетенций5=ПК-2, ПК-6
показатель5=уметь понимать и проверять индуктивные доказательства свойств языков, автоматов и грамматик;
тема5=1,2
задания5=Дано индуктивное доказательство о языке данного автомата. Объясните, получается ли 
         каждый из отмеченных логических шагов доказательства в силу
	     а) свойств строк, б) свойств конечных автоматов или в) индуктивного предположения.

кодыкомпетенций6 = ПК-2, ПК -6
показатель6= уметь преобразовывать задания данного регулярного языка при помощи конечного автомата, грамматики, регулярного выражения друг в друга;
тема6 = 1,2
задания6 = Постройте конечный автомат, эквивалентный регулярному выражению $((01)^*5(01^*2 + 021^+)(303+44)^*)^*$.

кодыкомпетенций7 = ПК-2, ПК -6
показатель7= уметь строить несложные машины Тьюринга.
тема7 = 3
задания7 = Постройте машину Тьюринга, обращающую второе слово на ленте, содержащей два слова в алфавите $\{0,1\}$. 





[Типовые задания доп]
текст = \subsubsection*{Вопросы к зачету}
		\begin{enumerate}
		\item
		Регулярное выражение (“математический вариант”). Итерация, конкатенация, альтернатива.  
		\item
		Регэкспы (регулярные выражения) POSIX: базовые и расширенные. Конструкции \verb!.!, \verb![abc]!, 
		\verb![a-c]!, \verb![^abm-z]!, \verb!*!, \verb!+!, \verb!{n, m}!, \verb!^!, \verb!$!, \verb!|!, 
		скобки, \texttt{\textbackslash}, \verb!?!.
		\item
		Детерминированные и недетерминированные конечные автоматы, определяемые ими языки.
		\item
		Теорема о детерминизации: преобразование НКА в ДКА
		\item
		Теорема об операциях над регулярными (автоматными) языками: конкатенация, итерация, объединение, пересечение, разность, дополнение, обращение (реверс).
		\item
		Теорема о существовании эквивалентного регулярного выражения для любого ДКА
		\item
		Теорема о преобразовании регулярного выражения в конечный автомат.
		\item
		Порождающие грамматики.
		\item
		Лемма о разрастании для регулярных языков.
		\item
		Контекстно-свободные грамматики. Примеры КС-грамматик: грамматика для $\{a^nb^n\}$. Грамматика для арифметических выражений, построенных из чисел.
		\item
		Деревья разбора. Левое и правое порождение (вывод).
		\item
		Нормальная форма Хомского. Устранение бесполезных символов.
		\item
		Нормальная форма Хомского. Удаление ε-правил.
		\item
		Нормальная форма Хомского. Удаление цепных правил.
		\item
		Нормальная форма Хомского. Устранение правил с терминалами в теле длины >1, устранение правил с телом длины >2 из нетерминалов.
		\item
		Алгоритм Кока-Янгера-Касами, его сложность (Галочкин и др., лекция 5)
		\item
		Магазинный автомат. Язык, допускаемый автоматом: при помощи пустого стека, при помощи конечного состояния. Эквивалентность.
		\item
		Построение магазинного автомата, эквивалентного заданной грамматике: конструкция, пример.
		\item
		Построение грамматики, эквивалентной данному магазинному автомату: построение, пример. 
		\item
		Машина Тьюринга. Машины прибавления единицы, перестановки двух слова на ленте.
		\item
		Универсальная машина Тьюринга. Неразрешимость проблемы самоприменимости.
		\item
		Неразрешимость проблемы остановки.
		\end{enumerate}

[Процедуры оценивания]
список =Форма промежуточной аттестации: зачет.
        \par
        Данный вид комплексного испытания предполагает последовательное выполнение 
        всех форм текущего контроля, таких, как онлайн-тесты по домашним заданиям на Gradiance
        и~выполнение контрольных работ.
        \par        
        Онлайн-тестирование. Данная форма контроля направлена на оценку основных 
        теоретических знаний обучающегося по мере освоения основных разделов дисциплины. 
        \par        
        Контрольные работы. В этой форме промежуточного контроля проверяется закрепленность 
        необходимых умений и навыков. 

[Литература]
осн = Мозговой М. В. Классика программирования: алгоритмы, языки, автоматы, компиляторы: практический подход. СПб: Наука и Техника, 2006. 320 с. | | 10 |
доп = Кормен Т.\,Х. Лейзерсон Ч., Ривест Р. Алгоритмы: построение и анализ. М.: МЦНМО, 1999 | | 1 |

[Ресурсы Интернет]
список = Хопкрофт Дж., Мотвани Р., Ульман Дж. Введение в теорию автоматов, языков и вычислений. Режим доступа:\\ https://books.google.ru/books?id=Th5ZTEpJQMoC
         Пентус А.\,Е., Пентус М.\,Р. Теория формальных языков. М.: Изд-во ЦПИ при ММФ МГУ, 2004, 80 с. Режим доступа:\\ http://www.mccme.ru/free-books/pentus/pentus.pdf
         Верещагин Н.\,К., Шень А.,Х. Вычислимые функции. М.: Изд-во МЦНМО, 2012. 160 с. Режим доступа: \\ http://www.mccme.ru/free-books/shen/shen-logic-part3-2.pdf
    	 Система Gradiance. Режим доступа:\\ http://www.newgradiance.com/
    	 INTUIT: Пентус А. Е., Пентус М. Р. Курс <<Математическая теория формальных языков>>.  Режим доступа: http://www.intuit.ru/studies/courses/1064/170/info
    	 Susan H. Rodger. JFLAP version 7.0. Режим доступа: http://www.cs.duke.edu/csed/jflap/

[Материальная база]
список = complab

[Информационные технологии]
инфтех =  использование на занятиях электронных изданий (чтение лекций с использованием слайд-презентаций);
		  ведение учета посещаемости и выполнения учебных заданий в системе Google Docs;
		  организация взаимодействия с обучающимися посредством электронной почты, специализированного образовательного форума Piazza;
		  компьютерное тестирование.		  
софт =    Виртуальная машина Java, например Oracle Java Runtime Environment;
          свободно распространяемое программное обеспечение: JFLAP и ANTLR;
          интернет-браузер.
