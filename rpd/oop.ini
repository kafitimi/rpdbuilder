[Заголовки]
дисциплина = Объектно-ориентированное программирование
код =
план = G09040101_16-1ИВТ-.plm.xml 
год = 2016

[Аннотация]
цель=знакомство с понятиями и овладение практическими навыками объектно-ориентированного программирования (ООП) 
краткоесодержание = Принципы ООП. Средства ООП в Си++. UML и шаблоны ОО проектирования. Обобщенное программирование и STL. Средства ООП в Java. Средства тестирования и совместной разработки ПО.
знать = принципы объектно-ориентированной разработки программ; 
уметь = объяснять принципы объектно-ориентированного подхода к проектированию программного обеспечения;
		читать UML-диаграммы классов, вариантов использования и последовательностей;
		читать код классов чужих программ на языках Java и Си++; 
		распознавать простые случаи использования паттернов объектно-ориентированного проектирования;
		использовать наследование для реализации отношений <<является>> и <<имеет>>;
владетьнавыками=составления несложных UML-диаграмм классов, вариантов использования и последовательностей;
				проектирования, релизации и тестирования простых объектно-ориентированных программ на Java и Си++;
				использования контейнерных классов стандартной библиотеки шаблонов языка Си++.
опирается= --
опорадля=Б1.В.ДВ.1.1 -- Распределенные объектные технологии,
         Б1.В.ДВ.1.2 -- Объектные базы данных,
         Б1.В.ДВ.3.1 -- Программирование на языке Питон, 
         Б1.В.ДВ.3.2 -- Разработка Java-приложений,
         Б1.В.ДВ.4.1 -- Разработка клиент-серверных приложений,
         Б1.В.ДВ.5.1 -- Алгоритмы цифровой обработки изображений,
         Б1.В.ДВ.5.2 -- CASE-системы разработки ПО

[Распределение часов]
список=Тема 1. Принципы ООП.                                    ||||||0.4*||||0*|0|
       Тема 2. Средства ООП в Си++.                             ||||||1.1*||||  |1.1*|
       Тема 3. Обобщенное программирование и STL                ||||||0.7*||||  |0.7*|
       Тема 4. Средства ООП в Java.                             ||||||1.3*||||  |1.3*|
       Тема 5. UML и шаблоны ОО проектирования                  ||||||0.7*||||  |0.7*|
       Тема 6. Средства тестирования и совместной разработки ПО ||||||0.5*||||  |0.5*|

[Содержание тем]
Тема1=Эволюция методологий программирования. Основные принципы объектного подхода. Наследование и отношения между объектами.
Тема2=Пространства имен. Перегрузка. Классы. Доступ к членам класса. Наследование. Виртуальные методы. Особенности копирующих конструкторов. Особенности перегрузки операторов. Проблемы множественного наследования. Обработка исключений
Тема3=Шаблоны функций. Шаблоны классов. Наследование и шаблоны. Контейнеры STL. Итераторы. Алгоритмы. Потоковые классы.
Тема4=Базовые типы Java, объекты, классы, пакеты. Доступ к членам класса. Интерфейсы. Наследование. Виртуальные методы. Многопоточные приложения.  
Тема5=Унифицированный язык проектирования UML. Основные виды диаграмм UML. Идея шаблона проектирования, различные подходы к выделению шаблонов. Шаблоны <<Наблюдатель>>, <<Итератор>>, <<Одиночка>>, <<Адаптер>>, <<Фасад>>, <<Фабрика>>.
Тема6=Библиотека JUnit. Подходы к совместной разработке ПО с использованием средств управления версиями.

[Формы и технологии занятий]
текст = При проведении занятий и организации СРС используются традиционные
        технологии сообщающего обучения, предполагающие передачу информации 
        в~готовом виде: проведение лекционных занятий, самостоятельная работа 
        с~источниками. Предусмотрено использование активных и интерактивных форм
        обучения с целью формирования и развития профессиональных навыков
        студентов --- выполнение практических работ с применением компьютерных 
        технологий.

[СРС]
табл=1|Средства ООП в Си++.                            |Прохождение онлайн-курса Intermediate C++. Сдача домашнего задания |12|Предъявление веб-страницы с информацией о прохождении курса. Сдача работающего кода.
     2|Обобщенное программирование и STL               |Сдача домашнего задания  | 8|Сдача работающего приложения
     3|Средства ООП в Java.                            |Прохождение начальных разделов онлайн-курса Software Construction in Java. Сдача домашнего задания  |15|Предъявление веб-страницы с информацией о прохождении разделов онлайн-курса. Сдача работающего кода.
     4|UML и шаблоны ОО проектирования                 |Сдача домашнего задания  |8 |Сдача диаграмм. Сдача работающего приложения
     5|Средства тестирования и совместной разработки ПО|Сдача домашнего задания  | 6|Сдача тестов к приложению <<Быки и коровы>>. Публикация исходного кода приложения <<Быки и Коровы>> в онлайн-репозиториии
      |ИТОГО                                           ||49| 

[Методические указания]
текст = В связи с небольшим объемом аудиторных, особенно лекционных, часов, важное 
		значение в освоении дисциплины имеет самостоятельная работа. Она предполагает 
		в том числе и сдачу частей онлайн-курсов на английском языке. Это 
        требует самостоятельности и ответственности.
        \par
        В диагностическом разделе дисциплины приведены тесты по каждому модулю
        дисциплины, которые необходимо выполнить для закрепления теоретических
        знаний.
        \par
        Последовательное и добросовестное изучение курса является основой для 
        выработки практических навыков использования объектно-ориентированного
        подхода к программированию, который является основным средством 
        управления сложностью во многих реальных программных проектах 
        в областях деятельности, предполагаемых стандартом подготовки по направлению
        «Информатика и вычислительная техника».

[Рейтинговый регламент]
табл = Посещаемость|5|10
       Домашние задания, онлайн курсы|25|45
       Практические занятия|10|15
       Тестирование|20|30
       Количество баллов для получения зачета (min-max)|60|100

[Показатели оценивания]
уровень1 = освоено 
критерии1 = способен выполнять большинство задач из следующего списка:
        объяснять понятия абстракции, инкапсуляции, наследования и полиморфизма, а также
        пояснять их пользу на примерах в языках Си++ и Java;
        реализовывать класс по UML-диаграмме класса;
        читать код классов чужих программ на языках Java и Си++; 
        применять паттерн <<фабричный метод>>
        реализовывать на языках Java и Cи++ класс, наследующий от другого несложного класса для реализации отношения <<является>> ;
        реализовывать на языке Си++ класс, наследующий от нескольких классов STL для реализации отношения <<имеет>>;
        составлять UML-диаграмму вариантов использования по текстовому описанию;
        проектировать, релизовать и тестировать простые объектно-ориентированные программы на Java и Си++;
        писать программы, использующие потоковые классы, классы {\tt vector} и {\tt map}.        
оценка1 = зачтено
уровень2 = не освоено
критерии2 = не способен выполнить три и более пунктов из вышеперечисленного\linebreak~\linebreak
оценка2 = не зачтено

[Типовые задания]
кодыкомпетенций1=ОК-8, ОПК-1
показатель1=знать принципы объектно-ориентированной разработки программ
тема1=Принципы ООП
задания1= Зачем нужны абстрактные классы?
	а)~Чтобы нельзя было создавать экземпляры данного класса\newline
	б)~Чтобы от класса могли наследовать только другие абстрактные классы\newline
	в)~Чтобы класс-наследник обязательно назывался по-другому\newline
	г)~Чтобы все функции в классах-наследниках были виртуальными

кодыкомпетенций2=ПК-18
показатель2=объяснять принципы объектно-ориентированного подхода к проектированию программного обеспечения
тема2=Принципы ООП; Средства ООП в Си++; Средства ООП в Java.
задания2=Объясните, как используется полиморфизм в выбранном языке, 
   реализовав метод вычисления объема для подклассов 
   <<тетраэдр>> и <<параллелепипед>> класса <<многогранник>>, 

кодыкомпетенций3=ОПК-1
показатель3=знать принципы объектно-ориентированной разработки программ;
тема3=Средства ООП в Си++.
задания3=Реализуйте на Си++ класс <<преподаватель>> и унаследуйте от него 
         классы <<постоянный сотрудник>> и <<преподаватель с почасовой оплатой труда>>,
         класс <<преподаватель>> должен иметь виртуальную функцию  расчета
         месячной оплаты труда {\tt compensation()}, определенную
         как оклад, умноженный на коэффициент, для первого классах-наследника
         или число проведенных часов, умноженных на ставку почасовой оплаты, для второго.   

кодыкомпетенций4=ПК-6
показатель4=проектирования, релизации и тестирования простых объектно-ориентированных программ на Java и Си++;
тема4=Средства тестирования и совместной разработки ПО
задания4=Напишите разумные модульные тесты JUnit для двух методов класса, реализованного вами в вопросе 2 (или его Java-эквивалента).   

[Процедуры оценивания]
список =Форма промежуточной аттестации: зачет
        \par
        Данный вид комплексного испытания предполагает последовательное выполнение 
        всех форм текущего контроля, таких, как тесты, прохождение онлайн-курсов 
        и~выполнение практических заданий.
        \par        
        Тестирование. Данная форма контроля направлена на оценку основных 
        теоретических знаний обучающегося по мере освоения основных разделов дисциплины. 
        \par        
        Контрольные работы. В этой форме промежуточного контроля проверяются способности 
        обобщенного анализа имеющихся теоретических знаний и умение пользоваться 
        специальной литературой. Во время выполнения контрольной работы разрешается 
        пользоваться справочной литературой

[Литература]
осн = Павловская Т. А. С/С++ . Программирование на языке высокого уровня. М.: Питер, 2013 | МОН РФ | 14 ||
доп = Слободчикова А. А. Практикум по объектно-ориентированному анализу и проектированию с помощью языка UML. Якутск: СВФУ, 2007 | | 14 | |
      Крылов Е. В. Технология, надежность и качество программного обеспечения. Техника разработки программ. М.: Высшая школа, 2007 | УМО вузов России| 30 | 
      Плаугер П. Дж., Ли М., Степанов А. STL --- стандартная библиотека шаблонов С++ . СПб: БХВ-Петербург, 2004 | | 6

[Ресурсы Интернет]
список = Справочник по языку C++ и стандартной библиотеке шаблонов STL. // The C++ Resources Network -- Режим доступа: http://cplusplus.com/
         Онлайн-курс Software Construction in Java. -- Режим доступа: \\https://www.edx.org/course/software-construction-java-mitx-6-005-1x
         Менеджер исходного кода Git // Git source sontrol manager -- Режим доступа: http://git-scm.com/
         Онлайн-курс Microsoft DEV210-2x: Intermediate C++. -- Режим доступа: \\https://www.edx.org/course/intermediate-c-microsoft-dev210-2x

[Материальная База]
список = complab

[Информационные технологии]
инфтех =  использование на занятиях электронных изданий (чтение лекций с использованием слайд-презентаций);
          ведение учета посещаемости и выполнения учебных заданий в системе Google Docs;
          разработка обучающимися программ на языках Си++ и Java;
          организация взаимодействия с обучающимися посредством электронной почты, специализированного образовательного форума Piazza;
          компьютерное тестирование.
софт =    среда разработки Microsoft Visual Studio или Code::Blocks с компилятором g++;
          среда разработки IntelliJ IDEA или NetBeans;
          Java Development Kit и библиотека JUnit;
          менеджер версий Git;
          интернет-браузер.
